name: Create Repository from Template

on:
  workflow_dispatch:
    inputs:
      repo-name:
        description: 'Nome da pipeline'
        required: true
        default: ''

jobs:
  create-repo:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      # - name: Install GitHub CLI
      #   run: |
      #     curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
      #     sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
      #     echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
      #     sudo apt-get update
      #     sudo apt-get install gh -y

      - name: Create new repository from template
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_REPO_NAME: ${{ github.event.inputs.repo-name }}
          TEMPLATE_OWNER: 'herbertenorio'
          TEMPLATE_REPO: 'terraform-pipeline-template'
        run: |
         curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/$TEMPLATE_OWNER/$TEMPLATE_REPO/generate \
          -d '{"owner":"$TEMPLATE_OWNER","name":"NEW_REPO_NAME","description":"Pipeline $NEW_REPO_NAME","include_all_branches":false,"private":false}'

      - name: Configure branch protection
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_REPO_NAME: ${{ github.event.inputs.repo-name }}
        run: |
          curl -X PUT \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.luke-cage-preview+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/${NEW_REPO_NAME}/branches/main/protection \
            -d '{
              "required_status_checks": null,
              "enforce_admins": true,
              "required_pull_request_reviews": {
                "dismiss_stale_reviews": true,
                "require_code_owner_reviews": false,
                "required_approving_review_count": 1
              },
              "restrictions": null
            }'